lista de clientes que prefieren productos premium, junto un informe sobre el promedio diario de transacciones

SELECT id_product
FROM products_data_all
WHERE 
    (category = 'milk' AND price > 17) 
    OR 
    (category = 'butter' AND price > 9);
---------------------------------------------------------------------------------------------------------------
Escribe una consulta para seleccionar los identificadores unicos `user_id` de clientes que compran productos de tipo
`milk` que cuestan mas de $17 o `butter` que cuestan mas de $9

SELECT DISTINCT user_id
FROM transactions
WHERE id_product IN (
    SELECT id_product 
    FROM products_data_all
    WHERE (category = 'milk' AND price > 17) 
        OR 
          (category = 'butter' AND price > 9)
);
-------------------------------------------------------------------------------------------------------------------
Escribe una consulta para encontrar el numero de transacciones unicas `id_transactions`, en la tabla `transactions`.
Agrupa los totales de transacciones por dia, truncando la columna `date` al nivel del dia.

SELECT COUNT(DISTINCT id_transaction) as transactions_per_day, DATE_TRUNC('day', date) as trunc_date
FROM transactions
GROUP BY trunc_date
ORDER BY trunc_date;
---------------------------------------------------------------------------------------------------------------------
Convierte la consulta de la tarea anterior en una subconsulta de bloque `from`, llama al resultado `SUBQ`.

SELECT EXTRACT(WEEK FROM SUBQ.trunc_date) AS week_number,
       AVG(SUBQ.transactions_per_day) AS avg_week_transaction
FROM (
    SELECT COUNT(DISTINCT id_transaction) AS transactions_per_day,
           DATE_TRUNC('day', date) AS trunc_date
    FROM transactions
    GROUP BY trunc_date
) AS SUBQ
GROUP BY week_number
ORDER BY week_number;
------------------------------------------------------------------------------------------------------------------------
